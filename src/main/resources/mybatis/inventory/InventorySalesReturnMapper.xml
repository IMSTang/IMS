<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.feng.project.inventory.salesreturn.dao.ISalesReturnDao" >
    <resultMap id="BaseResultMap" type="com.feng.project.inventory.salesreturn.domain.SalesReturn" >
        <id column="sn"  property="sn" />
        <result column="item_code" jdbcType="VARCHAR" property="itemCode" />
        <result column="stockout_sn" property="stockoutSn" />
        <result column="batch" jdbcType="VARCHAR" property="batch" />
        <result column="warehouse" jdbcType="VARCHAR" property="warehouse" />
        <result column="position" jdbcType="VARCHAR" property="position" />
        <result column="quantity"  property="quantity" />
        <result column="vendor_id"  property="vendorId" />
        <result column="customer_id"  property="customerId" />
        <result column="status" property="status" />
        <result column="return_date" property="returnDate" />
        <result column="create_by" jdbcType="VARCHAR" property="createBy" />
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
        <result column="update_by" jdbcType="VARCHAR" property="updateBy" />
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
        <result column="remark" jdbcType="VARCHAR" property="remark" />
        <association property="production"    column="item_code" javaType="Production" resultMap="prodResult"/>
        <association property="vendor"    column="vendor_id" javaType="Vendor" resultMap="vendorResult"/>
        <association property="customer"  column="customer_id" javaType="Customer" resultMap="customerResult"/>
    </resultMap>

    <resultMap id="prodResult" type="Production">
        <id     property="productionId"   column="production_id" />
        <result property="itemCode" column="item_code" />
        <result property="itemName" column="item_name"     />
        <result property="itemNameCn" column="item_name_cn"     />
        <result property="specification" column="specification" />
    </resultMap>

    <resultMap id="vendorResult" type="Vendor">
        <id     property="vendorId"   column="vendor_id" />
        <result property="vendorName" column="vendor_name" />
    </resultMap>

    <resultMap id="customerResult" type="Customer">
    <id     property="customerId"   column="customer_id" />
    <result property="customerName" column="customer_name" />
    </resultMap>

    <sql id="Base_Column_List" >
        sn, stockout_sn, item_code, batch, warehouse, position, quantity,
    irradiation, tpc, vendor_id, customer_id, status, return_date, create_by, create_time,
    update_by, update_time, remark
    </sql>


    <select id="selectSalesReturnList" parameterType="com.feng.project.inventory.salesreturn.domain.SalesReturn" resultMap="BaseResultMap">
        select o.* , p.production_id, p.item_code, p.item_name, p.item_name_cn, p.specification , v.vendor_name, c.customer_name
        from inv_sales_return o left join pro_production p on p.item_code = o.item_code
        left join pur_vendor v on v.vendor_id = o.vendor_id
        left join sale_customer c on c.customer_id = o.customer_id
        <where>
            o.status = 0
            <if test="searchValue != null and searchValue != ''">
                AND (o.item_code like CONCAT('%',#{searchValue},'%' ) or o.batch like CONCAT('%',#{searchValue},'%' )
                or p.item_name like CONCAT('%',#{searchValue},'%' ) or p.item_name_cn like CONCAT('%',#{searchValue},'%' ) )
            </if>
        </where>
    </select>

    <select id="selectSalesReturnById" parameterType="Long" resultMap="BaseResultMap">
		select o.* , p.production_id, p.item_code, p.item_name, p.item_name_cn, p.specification , v.vendor_name, c.customer_name
        from inv_sales_return o left join pro_production p on p.item_code = o.item_code
        left join pur_vendor v on v.vendor_id = o.vendor_id
        left join sale_customer c on c.customer_id = o.customer_id
        where o.status = 0 and o.sn = #{sn}
	</select>

    <parameterMap type="java.util.HashMap" id="salesReturnParams">
        <parameter property="stockoutSn" jdbcType="BIGINT" javaType="java.lang.Long"
                   mode="IN" />
        <parameter property="itemCode" jdbcType="VARCHAR" javaType="java.lang.String"
                   mode="IN" />
        <parameter property="batch" jdbcType="VARCHAR" javaType="java.lang.String"
                   mode="IN" />
        <parameter property="warehouse" jdbcType="VARCHAR" javaType="java.lang.String"
                   mode="IN" />
        <parameter property="position" jdbcType="VARCHAR" javaType="java.lang.String"
                   mode="IN" />
        <parameter property="quantity"  jdbcType="DOUBLE"  javaType="java.lang.Double"
                   mode="IN" />
        <parameter property="vendorId"  jdbcType="INTEGER"   javaType="java.lang.String"
                   mode="IN" />
        <parameter property="customerId"  jdbcType="INTEGER"   javaType="java.lang.String"
                   mode="IN" />
        <parameter property="returnDate" jdbcType="VARCHAR" javaType="java.lang.String"
                   mode="IN" />
        <parameter property="createBy" jdbcType="VARCHAR" javaType="java.lang.String"
                   mode="IN" />
        <parameter property="remark" jdbcType="VARCHAR" javaType="java.lang.String"
                   mode="IN" />
    </parameterMap>

    <parameterMap type="java.util.HashMap" id="salesReturnParamsId">
        <parameter property="sn"  jdbcType="BIGINT"   javaType="java.lang.Long"
                   mode="IN" />
    </parameterMap>

    <insert id="spSalesReturn" parameterMap="salesReturnParams"
            statementType="CALLABLE">
    <![CDATA[
        {call  sp_salesReturn(?, ?, ?, ?, ?,     ?, ?, ?, ?, ?,     ? )}
    ]]>
</insert>

    <delete id="spSalesReturnRemove" parameterMap="salesReturnParamsId"
            statementType="CALLABLE">
    <![CDATA[
        {call  sp_salesReturnRemove(?)}
    ]]>
    </delete>


</mapper>